/* myprofile.css */

/* General Layout */
.myprofile-layout {
    display: flex;
    height: 100vh;
    /* Fixed height to viewport */
    background-color: #f9f9f9;
    overflow: hidden;
    /* Hide overflow on the absolute parent. This means no scrollbar on the entire page. */
}

/* Sidebar Styling (already addressed in previous round, but included for completeness) */

.my-account-container {
    display: flex;
    align-items: center;
    margin-bottom: 16px;
    gap: 10px;
}

.profile-pic {
    width: 30px;
    height: 30px;
    border-radius: 50%;
    object-fit: cover;
}

.user-info {
    flex-grow: 1;
}

.email {
    font-size: 12px;
    color: #888;
    margin: 0;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.name {
    font-size: 14px;
    font-weight: 500;
    margin: 0;
}

.settings-icon {
    width: 20px;
    height: 20px;
}

.divider {
    border: none;
    border-top: 1px solid #e0e0e0;
    margin: 12px 0;
}

.section-title {
    font-size: 12px;
    color: #555;
    margin-bottom: 8px;
    font-weight: 600;
    padding-left: 4px;
}

.sidebar-button {
    display: flex;
    align-items: center;
    padding: 12px 10px;
    gap: 12px;
    border-radius: 10px;
    transition: background-color 0.2s ease, color 0.2s ease;
    text-decoration: none;
    color: #333;
    font-weight: 500;
    font-size: 14px;
    box-sizing: border-box;
    width: 100%;
}

.sidebar-button:hover {
    background-color: #e0f2ff;
    color: #007bff;
    cursor: pointer;
}

.sidebar-button.logout-button {
    margin-top: auto;
    color: #dc3545;
}

.sidebar-button.logout-button p {
    color: #dc3545;
}

.icon {
    width: 20px;
    height: 20px;
    object-fit: contain;
    flex-shrink: 0;
}

.footer-actions {
    margin-top: 20px;
    display: flex;
    flex-direction: column;
    gap: 10px;
    padding-top: 10px;
    border-top: 1px solid #e0e0e0;
}

/* MyProfile Main content area (right side, next to sidebar) */
.myprofile-main {
    flex: 1;
    /* Takes up all available width */
    overflow-y: auto;
    /* This is the primary scrolling container for the right-hand side */
    font-family: sans-serif;
    padding: 30px;
    /* Space around content */
    display: flex;
    flex-direction: column;
    /* Stacks header and content vertically */
}

.page-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 30px;
    flex-shrink: 0;
    /* Prevents header from shrinking */
}

.page-title {
    font-size: 24px;
    font-weight: 700;
    margin: 0;
}

.page-actions {
    display: flex;
    gap: 12px;
}

.header-button {
    padding: 10px 18px;
    border-radius: 8px;
    font-weight: 600;
    cursor: pointer;
    font-size: 14px;
    border: none;
}

.header-button.black {
    background-color: black;
    color: white;
}

.header-button.white {
    background-color: white;
    color: black;
    border: 1px solid #ccc;
}

/* MyProfile Content (the row containing the preview and editor forms) */
.myprofile-content {
    display: flex;
    /* Makes it a flex row */
    gap: 40px;
    justify-content: space-around;
    /* <-- CRITICAL: Re-enabled for horizontal spacing */
    flex: 1;
    /* Allows this row to take up all *remaining* vertical space within .myprofile-main */
    min-height: 0;
    /* CRITICAL: Allows flex items inside to shrink and enables their overflow-y: auto */
    overflow: hidden;
    /* Prevents this row from having its own scrollbar, children manage. */
    padding-bottom: 20px;
    /* Add some padding at the bottom of the content section */
}

/* MyProfile Preview (the mock phone side) */
.myprofile-preview {
    /* Set a flex-basis to give it a preferred size, but allow it to shrink/grow */
    flex: 0 1 320px;
    /* flex-grow:0, flex-shrink:1, flex-basis:320px */
    max-width: 320px;
    /* Hard cap for the width of this container */

    position: relative;
    /* Keep as relative for potential absolute children */
    box-sizing: border-box;

    display: flex;
    /* Make it a flex container to center the phone */
    flex-direction: column;
    /* Center vertically */
    align-items: center;
    /* Center mock-phone horizontally */
    justify-content: center;
    /* Center mock-phone vertically */

    min-height: 0;
    /* Crucial for nested flex containers to properly calculate height */
    overflow: hidden;
    /* This container should hide any overflow from the phone frame itself */
    align-self: stretch;
    /* Make it fill the available height within .myprofile-content */
}

/* Mock Phone Styling (The only phone div) */
.mock-phone {
    /* ULTIMATE ATTEMPT AT SCALING TO FIT CONTAINER: */
    /* Use explicit percentages for max-width/height, with aspect-ratio */
    width: 100%;
    /* Will initially try to take 100% of parent's width */
    height: 100%;
    /* Will initially try to take 100% of parent's height */
    max-width: 100%;
    /* Restrict width to 100% of parent */
    max-height: 100%;
    /* Restrict height to 100% of parent */
    aspect-ratio: 9 / 19.5;
    /* Maintain phone shape. This will make it fit the most constrained dimension. */

    background: #fff;
    /* Phone's background */
    border: 0.625rem solid #ccc;
    /* Phone's grey border */
    border-radius: 2.5rem;
    /* Phone's large radius */
    padding: 1.5rem;
    /* Phone's internal padding */
    text-align: center;
    box-shadow: 0 0.25rem 1rem rgba(0, 0, 0, 0.1);
    /* Phone's own shadow */

    box-sizing: border-box;
    /* Ensures padding and border are *included* in the 100% width/height */

    display: flex;
    /* Makes content inside flow as flex items */
    flex-direction: column;
    /* Stacks content vertically */
    flex-shrink: 0;
    /* Prevent the phone frame itself from shrinking its content */
    flex-grow: 0;
    /* Don't allow it to grow beyond its calculated size */

    /* Dark mode specific styles for mock-phone background and border */
    &[style*="background-color: rgb(31, 31, 31)"] {
        background-color: #1F1F1F !important;
        border-color: #555 !important;
    }

    /* Ensure text within mock-phone adapts to theme */
    &[style*="background-color: rgb(31, 31, 31)"] * {
        color: white;
    }

    &[style*="background-color: rgb(31, 31, 31)"] .mock-subtitle,
    &[style*="background-color: rgb(31, 31, 31)"] .mock-profile-role,
    &[style*="background-color: rgb(31, 31, 31)"] .mock-service-item span {
        color: #bbb;
    }

    &[style*="background-color: rgb(31, 31, 31)"] .mock-about,
    &[style*="background-color: rgb(31, 31, 31)"] .mock-service-item,
    &[style*="background-color: rgb(31, 31, 31)"] .mock-review-card {
        background: #333;
        color: white;
    }

    &[style*="background-color: rgb(31, 31, 31)"] .mock-review-card .mock-review-text {
        color: #ddd;
    }
}

/* --- CRITICAL CLASS: For the scrollable content inside the mock-phone --- */
/* You MUST wrap your content (from mock-cover down to reviews-list) in a div with this class in JSX */
.mock-phone-scrollable-content {
    flex-grow: 1;
    /* This inner content wrapper takes up all available vertical space */
    overflow-y: auto;
    /* THIS IS WHERE THE SCROLLBAR FOR THE CONTENT GOES */
    width: 100%;
    /* Ensure it spans the full width of the phone's internal area */
    box-sizing: border-box;
    /* Include padding in calculations */

    display: flex;
    flex-direction: column;
    /* Consider adding padding or gap here if needed for internal content spacing */
}

/* General rule for direct children of mock-phone that are *not* the scrollable content wrapper */
.mock-phone>*:not(.mock-phone-scrollable-content) {
    flex-shrink: 0;
    /* Prevents these elements from shrinking */
}


/* Keep the rest of the mock-specific classes and their styling here for the preview */
.mock-cover {
    width: 100%;
    aspect-ratio: 16 / 9;
    object-fit: cover;
    border-radius: 0.75rem;
    margin-bottom: 1rem;
    display: block;
    height: auto;
}

.mock-title {
    font-size: 2rem;
    font-weight: 700;
    margin: 0;
    line-height: 1.2;
}

.mock-subtitle {
    font-size: 1rem;
    font-weight: 600;
    color: #555;
    margin: 0.5rem 0 1rem 0;
}

.mock-button {
    background: black;
    color: white;
    padding: 0.75rem 1.25rem;
    border-radius: 0.5rem;
    border: none;
    font-weight: 700;
    font-size: 0.875rem;
    margin: 1rem 0;
    width: 100%;
    box-sizing: border-box;
}

.mock-section-title {
    font-size: 1rem;
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
    font-weight: 600;
    text-align: left;
}

.mock-about {
    background: #f1f1f1;
    border-radius: 1rem;
    padding: 1rem;
    display: flex;
    gap: 0.75rem;
    text-align: left;
    align-items: flex-start;
    flex-direction: row;
}

.mock-avatar {
    width: 3.5rem;
    height: 3.5rem;
    border-radius: 50%;
    object-fit: cover;
    flex-shrink: 0;
    display: block;
}

.mock-about-text-group {
    display: flex;
    flex-direction: column;
    flex: 1;
}

.mock-profile-name {
    font-weight: 700;
    margin: 0;
    font-size: 1.125rem;
}

.mock-profile-role {
    font-size: 0.9375rem;
    margin: 0;
    color: #555;
    font-weight: normal;
}

.mock-bio-text {
    font-size: 0.9375rem;
    line-height: 1.4;
    margin-top: 0.75rem;
    text-align: left;
    color: #333;
}

.mock-work-gallery {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(90px, 1fr));
    gap: 0.75rem;
}

.mock-work-gallery img {
    width: 100%;
    aspect-ratio: 16 / 9;
    object-fit: cover;
    border-radius: 0.5rem;
    display: block;
    height: auto;
}

.mock-services-list {
    display: flex;
    flex-direction: column;
    gap: 0.625rem;
}

.mock-service-item {
    background-color: #f6f6f6;
    border-radius: 0.75rem;
    padding: 0.75rem 1rem;
    text-align: left;
    display: flex;
    flex-direction: column;
}

.mock-service-name {
    font-size: 0.9375rem;
    font-weight: 600;
    margin: 0;
    line-height: 1.3;
}

.mock-service-price {
    font-size: 0.8125rem;
    color: #777;
    margin: 0;
    line-height: 1.3;
}

.mock-reviews-list {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
}

.mock-review-card {
    background-color: #f6f6f6;
    border-radius: 0.75rem;
    padding: 1rem;
    text-align: left;
}

.mock-star-rating {
    color: gold;
    font-size: 1rem;
    margin-bottom: 0.5rem;
    letter-spacing: 0.1rem;
}

.mock-review-text {
    font-size: 0.9375rem;
    color: #333;
    margin-top: 0;
    margin-bottom: 0.75rem;
    line-height: 1.4;
}

.mock-reviewer-name {
    font-size: 0.875rem;
    font-weight: 600;
    color: #555;
    margin: 0;
}

/* Media Query for very small screens (still relevant for mock-phone) */
@media (max-width: 400px) {
    .mock-phone {
        /* Apply responsive styling directly to .mock-phone */
        padding: 1rem;
        border-width: 0.375rem;
        border-radius: 2rem;
    }

    .mock-title {
        font-size: 1.1rem;
    }

    .mock-subtitle {
        font-size: 0.875rem;
    }

    .mock-button {
        font-size: 0.9rem;
        padding: 0.6rem 1rem;
    }

    .mock-section-title {
        font-size: 0.8rem;
        margin-top: 1rem;
        margin-bottom: 0.5rem;
    }

    .mock-about {
        padding: 0.6rem;
        gap: 0.6rem;
    }

    .mock-avatar {
        width: 2rem;
        height: 2rem;
    }

    .mock-profile-name {
        font-size: 0.9rem;
    }

    .mock-profile-role {
        font-size: 0.75rem;
    }

    .mock-service-item {
        padding: 0.6rem 0.8rem;
    }

    .mock-service-name {
        font-size: 0.875rem;
    }

    .mock-service-price {
        font-size: 0.75rem;
    }

    .mock-review-card {
        padding: 0.8rem;
    }

    .mock-star-rating {
        font-size: 0.9rem;
    }

    .mock-review-text {
        font-size: 0.875rem;
    }

    .mock-reviewer-name {
        font-size: 0.8rem;
    }
}

/* === Editor specific styling === */
.myprofile-editor-wrapper {
    position: relative;
    flex: 1;
    /* Allow it to take available space */
    max-width: min(50%, 600px);
    /* Use min() to cap max-width better */
    min-width: 350px;
    /* Ensure it doesn't get too small */
    display: flex;
    /* Make it a flex container for the editor */
    flex-direction: column;
    /* Stack children vertically */
    min-height: 0;
    /* Crucial for flex children that need to scroll */
    align-self: stretch;
    /* CRITICAL: Ensure it stretches to fill vertical space */
}

.myprofile-editor {
    flex: 1;
    /* Allows editor to fill vertical space within its wrapper */
    background: white;
    padding: 24px;
    border-radius: 16px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.06);
    display: flex;
    flex-direction: column;
    /* Editor itself is a column */
    gap: 20px;
    overflow-y: auto;
    /* This should now correctly enable internal scrolling for the form */
    box-sizing: border-box;
    /* Removed min-height and max-height for better flex behavior */
}

.editor-title {
    font-size: 18px;
    font-weight: 600;
}

.editor-subtitle {
    font-size: 16px;
    font-weight: 600;
    margin-top: 10px;
}

.input-block {
    display: flex;
    flex-direction: column;
    gap: 6px;
}

.input-block label {
    font-size: 14px;
    font-weight: 500;
}

.input-block input {
    padding: 10px;
    border-radius: 8px;
    border: 1px solid #ccc;
    font-size: 14px;
}

.option-row {
    display: flex;
    gap: 10px;
}

.theme-button,
.font-button {
    padding: 8px 14px;
    border-radius: 8px;
    border: 1px solid #ddd;
    background: #fff;
    cursor: pointer;
    font-size: 13px;
    font-weight: 500;
    transition: background-color 0.2s, color 0.2s, border-color 0.2s;
}

.theme-button.is-active,
.font-button.is-active {
    background-color: #007bff;
    color: white;
    border-color: #007bff;
}

.cover-preview {
    width: 100%;
    border-radius: 8px;
    object-fit: cover;
}

.divider {
    margin: 20px 0;
    border: none;
    border-top: 1px solid #eee;
}

.work-preview-row {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(90px, 1fr));
    gap: 12px;
}

.work-preview-row img {
    width: 100%;
    height: 90px;
    object-fit: cover;
    border-radius: 8px;
}

.input-block input[type="text"],
.input-block textarea {
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 8px;
    font-size: 14px;
    width: 100%;
    box-sizing: border-box;
}

.input-block button {
    margin-top: 8px;
    padding: 8px 14px;
    font-size: 13px;
    border: 1px solid #ccc;
    border-radius: 8px;
    background-color: #f9f9f9;
    cursor: pointer;
    transition: background 0.2s;
}

.input-block button:hover {
    background-color: #eee;
}

.review-card {
    background: #f6f6f6;
    border-radius: 12px;
    padding: 12px;
    margin-bottom: 10px;
}

.review-card input {
    margin-bottom: 6px;
}

.submit-button {
    padding: 12px 20px;
    border-radius: 8px;
    font-weight: 600;
    cursor: pointer;
    font-size: 16px;
    border: none;
    margin-top: auto;
}

/* Subscription Overlay Styles */
.subscription-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 255, 255, 0.9);
    /* White overlay with transparency */
    backdrop-filter: blur(8px);
    /* Blur effect */
    display: flex;
    justify-content: center;
    /* Center horizontally */
    align-items: center;
    /* Center vertically */
    z-index: 10;
    /* Ensure it's above the form */
    border-radius: 16px;
    /* Match form border-radius */
    overflow: hidden;
    /* Hide anything that overflows this overlay */
}

.subscription-message {
    background-color: #ffffff;
    padding: 30px;
    border-radius: 12px;
    text-align: center;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    max-width: 400px;
    z-index: 11;
    /* Ensure message is above overlay */
    display: flex;
    /* Make it a flex container */
    flex-direction: column;
    /* Stack children vertically */
    align-items: center;
    /* Center items horizontally within itself */
    gap: 15px;
    /* Add some space between text and button */
}

.subscription-message h2 {
    font-size: 24px;
    color: #333;
    margin-bottom: 0;
    /* Remove default margin to control spacing with gap */
}

.subscription-message p {
    font-size: 16px;
    color: #666;
    margin-bottom: 0;
    /* Remove default margin to control spacing with gap */
}

.start-trial-button {
    background-color: #007bff;
    color: white;
    padding: 12px 25px;
    border: none;
    border-radius: 8px;
    font-size: 18px;
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.start-trial-button:hover {
    background-color: #0056b3;
}

/* Media Query for editor previews specific responsiveness (no change) */
@media (max-width: 400px) {
    .mock-phone {
        /* Apply responsive styling directly to .mock-phone */
        padding: 1rem;
        border-width: 0.375rem;
        border-radius: 2rem;
    }

    .mock-title {
        font-size: 1.1rem;
    }

    .mock-subtitle {
        font-size: 0.875rem;
    }

    .mock-button {
        font-size: 0.9rem;
        padding: 0.6rem 1rem;
    }

    .mock-section-title {
        font-size: 0.8rem;
        margin-top: 1rem;
        margin-bottom: 0.5rem;
    }

    .mock-about {
        padding: 0.6rem;
        gap: 0.6rem;
    }

    .mock-avatar {
        width: 2rem;
        height: 2rem;
    }

    .mock-profile-name {
        font-size: 0.9rem;
    }

    .mock-profile-role {
        font-size: 0.75rem;
    }

    .mock-service-item {
        padding: 0.6rem 0.8rem;
    }

    .mock-service-name {
        font-size: 0.875rem;
    }

    .mock-service-price {
        font-size: 0.75rem;
    }

    .mock-review-card {
        padding: 0.8rem;
    }

    .mock-star-rating {
        font-size: 0.9rem;
    }

    .mock-review-text {
        font-size: 0.875rem;
    }

    .mock-reviewer-name {
        font-size: 0.8rem;
    }
}